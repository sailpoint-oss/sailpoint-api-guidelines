{
  "rules": [
    {
      "id": "#100",
      "title": "SHOULD follow API first principle"
    },
    {
      "id": "#101",
      "title": "MUST provide API specification using OpenAPI"
    },
    {
      "id": "#102",
      "title": "SHOULD provide API user manual"
    },
    {
      "id": "#103",
      "title": "MUST write APIs using U.S. English"
    },
    {
      "id": "#104",
      "title": "MUST secure endpoints with OAuth 2.0 icon:check-square[text=\"Test\" role=\"lime\"]"
    },
    {
      "id": "#105",
      "title": "MUST define and assign permissions (scopes) icon:check-square[text=\"Test\" role=\"lime\"]"
    },
    {
      "id": "#106",
      "title": "MUST not break backward compatibility"
    },
    {
      "id": "#107",
      "title": "SHOULD prefer compatible extensions"
    },
    {
      "id": "#108",
      "title": "MUST prepare clients to accept compatible API extensions"
    },
    {
      "id": "#109",
      "title": "SHOULD design APIs conservatively"
    },
    {
      "id": "#110",
      "title": "MUST always return JSON objects as top-level data structures"
    },
    {
      "id": "#111",
      "title": "MUST treat OpenAPI specification as open for extension by default"
    },
    {
      "id": "#113",
      "title": "SHOULD avoid versioning"
    },
    {
      "id": "#115",
      "title": "MUST use URI versioning"
    },
    {
      "id": "#116",
      "title": "MUST use semantic versioning"
    },
    {
      "id": "#118",
      "title": "MUST property names must be ASCII camelCase"
    },
    {
      "id": "#120",
      "title": "SHOULD pluralize array names"
    },
    {
      "id": "#122",
      "title": "MUST not use `null` for boolean properties"
    },
    {
      "id": "#123",
      "title": "MUST use same semantics for `null` and absent properties"
    },
    {
      "id": "#124",
      "title": "MUST not use `null` for empty arrays"
    },
    {
      "id": "#126",
      "title": "SHOULD define dates properties compliant with RFC 3339"
    },
    {
      "id": "#127",
      "title": "SHOULD define time durations and intervals properties conform to ISO 8601"
    },
    {
      "id": "#128",
      "title": "MUST use standards for country, language and currency codes"
    },
    {
      "id": "#129",
      "title": "MUST use lowercase separate words with hyphens for path segments"
    },
    {
      "id": "#130",
      "title": "MUST camelCase for query parameters"
    },
    {
      "id": "#132",
      "title": "SHOULD use uppercase separate words with hyphens for HTTP headers"
    },
    {
      "id": "#133",
      "title": "MAY use standardized headers"
    },
    {
      "id": "#134",
      "title": "MUST pluralize resource names"
    },
    {
      "id": "#135",
      "title": "MUST not use `/api` as base path"
    },
    {
      "id": "#136",
      "title": "MUST use normalized paths without empty path segments and trailing slashes"
    },
    {
      "id": "#137",
      "title": "MUST stick to conventional query parameters"
    },
    {
      "id": "#138",
      "title": "SHOULD avoid actions — think about resources"
    },
    {
      "id": "#139",
      "title": "SHOULD model complete business processes"
    },
    {
      "id": "#140",
      "title": "SHOULD define _useful_ resources"
    },
    {
      "id": "#141",
      "title": "SHOULD keep URLs verb-free"
    },
    {
      "id": "#142",
      "title": "MUST use domain-specific resource names"
    },
    {
      "id": "#143",
      "title": "MUST identify resources and sub-resources via path segments"
    },
    {
      "id": "#145",
      "title": "SHOULD consider using (non-)nested URLs"
    },
    {
      "id": "#146",
      "title": "SHOULD limit number of resource types"
    },
    {
      "id": "#147",
      "title": "SHOULD limit number of sub-resource levels"
    },
    {
      "id": "#148",
      "title": "MUST use HTTP methods correctly"
    },
    {
      "id": "#149",
      "title": "MUST fulfill common method properties"
    },
    {
      "id": "#150",
      "title": "MUST use standard HTTP status codes"
    },
    {
      "id": "#151",
      "title": "MUST specify success and error responses icon:check-square[text=\"Test\" role=\"lime\"]"
    },
    {
      "id": "#152",
      "title": "MUST use code 207 for batch or bulk requests"
    },
    {
      "id": "#153",
      "title": "MUST use code 429 with headers for rate limits"
    },
    {
      "id": "#154",
      "title": "MUST define collection format of header and query parameters"
    },
    {
      "id": "#157",
      "title": "SHOULD support partial responses via filtering"
    },
    {
      "id": "#158",
      "title": "SHOULD allow optional embedding of sub-resources"
    },
    {
      "id": "#159",
      "title": "MUST support pagination "
    },
    {
      "id": "#161",
      "title": "MAY use pagination links where applicable"
    },
    {
      "id": "#162",
      "title": "MUST use REST maturity level 2"
    },
    {
      "id": "#164",
      "title": "MUST use common hypertext controls"
    },
    {
      "id": "#166",
      "title": "MUST not use link headers with JSON entities"
    },
    {
      "id": "#167",
      "title": "MUST use JSON as payload data interchange format"
    },
    {
      "id": "#168",
      "title": "MAY pass non-JSON media types using data specific standard formats"
    },
    {
      "id": "#169",
      "title": "MUST use standard date and time formats"
    },
    {
      "id": "#170",
      "title": "MUST use standards for country, language and currency codes"
    },
    {
      "id": "#171",
      "title": "MUST define format for number and integer types icon:check-square[text=\"Test\" role=\"lime\"]"
    },
    {
      "id": "#172",
      "title": "SHOULD use standard media types"
    },
    {
      "id": "#173",
      "title": "MUST use the common money object"
    },
    {
      "id": "#174",
      "title": "MUST use common field names and semantics"
    },
    {
      "id": "#176",
      "title": "MUST support problem JSON"
    },
    {
      "id": "#177",
      "title": "MUST not expose stack traces"
    },
    {
      "id": "#178",
      "title": "MUST use `Content-*` headers correctly"
    },
    {
      "id": "#179",
      "title": "MAY use `Content-Location` header"
    },
    {
      "id": "#180",
      "title": "SHOULD use `Location` header instead of `Content-Location` header"
    },
    {
      "id": "#181",
      "title": "MAY consider to support `Prefer` header to handle processing preferences"
    },
    {
      "id": "#182",
      "title": "MAY consider to support `ETag` together with `If-Match`/`If-None-Match` header"
    },
    {
      "id": "#187",
      "title": "MUST reflect deprecation in API specifications"
    },
    {
      "id": "#188",
      "title": "MUST monitor usage of deprecated API scheduled for sunset"
    },
    {
      "id": "#189",
      "title": "SHOULD add `Deprecation` and `Sunset` header to responses icon:check-square[text=\"Test\" role=\"lime\"]"
    },
    {
      "id": "#190",
      "title": "SHOULD add monitoring for `Deprecation` and `Sunset` header"
    },
    {
      "id": "#191",
      "title": "MUST not start using deprecated APIs"
    },
    {
      "id": "#192",
      "title": "MUST publish OpenAPI specification"
    },
    {
      "id": "#193",
      "title": "MUST monitor API usage"
    },
    {
      "id": "#216",
      "title": "SHOULD define maps using `additionalProperties`"
    },
    {
      "id": "#217",
      "title": "SHOULD use full, absolute URI"
    },
    {
      "id": "#218",
      "title": "MUST contain API meta information"
    },
    {
      "id": "#219",
      "title": "MUST provide API audience"
    },
    {
      "id": "#220",
      "title": "MUST use most specific HTTP status codes"
    },
    {
      "id": "#223",
      "title": "MUST-SHOULD use functional naming schema"
    },
    {
      "id": "#225",
      "title": "MUST follow naming convention for permissions (scopes)"
    },
    {
      "id": "#226",
      "title": "MUST document implicit filtering"
    },
    {
      "id": "#228",
      "title": "MUST use URL-friendly resource identifiers: [a-zA-Z0-9:._\\-/]*"
    },
    {
      "id": "#229",
      "title": "SHOULD consider to design `POST` and `PATCH` idempotent"
    },
    {
      "id": "#230",
      "title": "MAY consider to support `Idempotency-Key` header"
    },
    {
      "id": "#231",
      "title": "MAY use secondary key for idempotent `POST` design"
    },
    {
      "id": "#236",
      "title": "SHOULD design simple query languages using query parameters"
    },
    {
      "id": "#237",
      "title": "MUST design complex query languages using JSON"
    },
    {
      "id": "#238",
      "title": "MUST use standardized property formats"
    },
    {
      "id": "#239",
      "title": "MUST encode embedded binary data in `base64url`"
    },
    {
      "id": "#240",
      "title": "MUST declare enum values using UPPER_SNAKE_CASE string "
    },
    {
      "id": "#301",
      "title": "MUST follow SailPoint API Guidelines"
    },
    {
      "id": "#302",
      "title": "MUST provide detailed API description"
    },
    {
      "id": "#303",
      "title": "MUST describe every parameter and property icon:check-square[text=\"Test\" role=\"lime\"]"
    },
    {
      "id": "#304",
      "title": "MUST provide an example for every parameter and property icon:check-square[text=\"Test\" role=\"lime\"]"
    },
    {
      "id": "#305",
      "title": "SHOULD keep operation summaries at five or less words icon:check-square[text=\"Test\" role=\"lime\"]"
    },
    {
      "id": "#306",
      "title": "MUST Document necessary license add-on to use an API collection"
    },
    {
      "id": "#307",
      "title": "MUST follow versioned API requirements"
    },
    {
      "id": "#308",
      "title": "MUST follow beta API requirements"
    },
    {
      "id": "#309",
      "title": "SHOULD Confer with clients on accepted deprecation time-span"
    },
    {
      "id": "#310",
      "title": "MUST define a default value for boolean properties icon:check-square[text=\"Test\" role=\"lime\"]"
    },
    {
      "id": "#311",
      "title": "SHOULD avoid using qualifying verbs"
    },
    {
      "id": "#312",
      "title": "SHOULD use positive semantics for boolean fields"
    },
    {
      "id": "#313",
      "title": "MUST use a field name that suggests the value type when referencing an object"
    },
    {
      "id": "#314",
      "title": "SHOULD name references to foreign objects as <objectName>Ref"
    },
    {
      "id": "#315",
      "title": "SHOULD avoid using nested objects"
    },
    {
      "id": "#316",
      "title": "MUST define a default for optional values"
    },
    {
      "id": "#317",
      "title": "MUST define the “required” attribute for request/response objects and parameters icon:check-square[text=\"Test\" role=\"lime\"]"
    },
    {
      "id": "#318",
      "title": "MUST use the “nullable” attribute for properties that can be null"
    },
    {
      "id": "#319",
      "title": "MUST Customer org name must never appear in the path of public APIs"
    },
    {
      "id": "#320",
      "title": "MUST not use sequential, numerical IDs"
    },
    {
      "id": "#321",
      "title": "MUST use a standard error response object"
    },
    {
      "id": "#322",
      "title": "MAY define application specific codes for the standard error response object"
    },
    {
      "id": "#323",
      "title": "MUST use the most accurate response example for each endpoint"
    },
    {
      "id": "#324",
      "title": "MUST use proper description format for the `filters` query param"
    },
    {
      "id": "#325",
      "title": "MUST use proper description format for the `sorters` query param"
    },
    {
      "id": "#326",
      "title": "MUST define user levels (capabilities) needed by an endpoint"
    },
    {
      "id": "#400",
      "title": "MUST provide a valid operationId in camelCase for each operation icon:check-square[text=\"Test\" role=\"lime\"]"
    },
    {
      "id": "#402",
      "title": "MUST provide a valid tag for each operation icon:check-square[text=\"Test\" role=\"lime\"]"
    }
  ]
}
